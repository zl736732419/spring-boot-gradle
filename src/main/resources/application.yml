custom:
  name: application.yml
  #######  custom validate properties
  host: 192.168.1.1
  port: 8080
  #######

server:
  host: 192.168.1.100

acme:
  enabled: true
  remote-address: 127.0.0.1
  security:
    username: xiaolian
    password: 123456
    roles: 
      - USER
      - ADMIN


# ///////////////////////////logging////////////////////////////
#spring:
#  output:
#    ansi:
#      enabled: always

logging:
#  pattern:
#    console: '%clr(%d{yyyy-MM-dd HH:mm:ss}){yellow} [%clr(%thread){red}] %-5level --- %clr(%logger){green} | %msg%n'
  file:
#    max-history: 3
  group: 
    tomcat: org.apache.catalina, org.apache.coyote, org.apache.tomcat
  level: 
    tomcat: info
#  path: ./logs
# ///////////////////////////logging////////////////////////////

# ////////////////////////// i18n /////////////////////////////
spring:
  messages:
    basename: i18n/messages
    cache-duration: 3600  # 单位秒
    encoding: UTF-8

# ///////////////////////// static resources ///////////////////////////
  mvc:
#    static-path-pattern: /resources/**
    resources:
      static-locations: classpath:/static/, classpath:/app/
  
# ////////////////////////Path Matching & Content Negotiation ///////////////  
    contentnegotiation:
      favor-parameter: true
      media-types:
        plain: text/plain
        xml: text/xml
      favor-path-extension: true
    pathmatch:
  #      use-suffix-pattern: true
      use-registered-suffix-pattern: true

# //////////////////////////////// datasource ///////////////////////////////
  datasource:
    url: jdbc:hsqldb:file:E:/hsqldb/testdb
    username: SA
    password: 
    driver-class-name: org.hsqldb.jdbc.JDBCDriver


# //////////////////////////// redis ///////////////////////////////////
  redis:
    host: 192.168.3.201
    password: 
    port: 6379
    # 连接超时时间（毫秒）
    timeout: 300
    lettuce:
      pool:
        # 连接池最大连接数
        max-active: 32
        # 连接池最大阻塞等待时间(使用负值表示没有限制) 默认为-1
        max-wait: 100
        # 连接池中的最大空闲连接 默认为8
        max-idle: 8
        # 连接池中的最小空闲连接 默认为 0
        min-idle: 4
    jedis:
      pool:
        max-active: 32
        max-wait: 100
        max-idle: 8
        min-idle: 4

  # /////////////////////////// cache ///////////////////////////////////
  cache:
    ##### case 1: use simple cache manager
    #    type: simple
    # only use by simple cache(ConcurrentMapCacheManager)
    #    cache-names: cache1,cache2  
    ##### case 1 end 

    ##### case 2: use jcache jsr-107, ehcache-jcache implementation 
#        type: jcache
#        jcache:
#          config: classpath:/cache/jcache.xml
#          provider: org.ehcache.jcache.JCacheCachingProvider
    ##### case 2 end

    ##### case 3: use ehcache 2.x
#        type: ehcache
#        ehcache:
#          config: classpath:/cache/ehcache.xml
    ##### case 3 end

    #    ##### case 4 forbidden cache
    #    type: none
    #    ##### case 4 end

    ##### case 5 redis cache
    cache-names: cache1,cache2
    type: redis
    redis:
      time-to-live: 600000 # 10 minutes
    ##### case 5 end
    
  # /////////////////////////// jms ///////////////////////////////////
  ##### activemq
#  jms:
#    cache:
#      session-cache-size: 5
#    pub-sub-domain: true
#  activemq:
#    broker-url: tcp://192.168.3.201:61616
#    user: system
#    password: manager
#    pool:
#      enabled: true
#      max-connections: 10
  ##### activemq end
  
  ##### rabbitmq
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
#    template:
#      retry:
#        enabled: true
#        initial-interval: 2s
  ##### end